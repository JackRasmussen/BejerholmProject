package view;

import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JButton;
import view.ordre.BedemandGUI;
import view.ordre.BestillingsOrdreGUI;
import view.ordre.KirkegaardGUI;
import view.ordre.KundeGUI;
import view.ordre.ProduktGUI;
import view.ordre.TilfoejelseGUI;

/**
 *
 * @author TheToiletpaper
 */
public class OrdreGUI extends javax.swing.JPanel {

    private KundeGUI kg;
    private BestillingsOrdreGUI bog;
    private BedemandGUI beg;
    private KirkegaardGUI kgg;
    private ProduktGUI pdg;
    private TilfoejelseGUI tfg;
    private boolean kirkegaardsOrdre;

    public OrdreGUI() {
        kg = new KundeGUI(this);
        beg = new BedemandGUI(this);
        bog = new BestillingsOrdreGUI(this);
        kgg = new KirkegaardGUI(this);
        pdg = new ProduktGUI(this);
        tfg = new TilfoejelseGUI(this);
        kirkegaardsOrdre = false;
        

        initComponents();
        kundeoplysninger.setBackground(new Color(150,150,150));
        cardsOrdre.add(kg);
        cardsOrdre.add(beg);
        cardsOrdre.add(bog);
        cardsOrdre.add(kgg);
        cardsOrdre.add(pdg);
        cardsOrdre.add(tfg);

        ((CardLayout) cardsOrdre.getLayout()).addLayoutComponent(kg, "KundeGUI");
        ((CardLayout) cardsOrdre.getLayout()).addLayoutComponent(beg, "BedemandGUI");
        ((CardLayout) cardsOrdre.getLayout()).addLayoutComponent(bog, "BestillingsOrdreGUI");
        ((CardLayout) cardsOrdre.getLayout()).addLayoutComponent(kgg, "KirkegaardGUI");
        ((CardLayout) cardsOrdre.getLayout()).addLayoutComponent(pdg, "ProduktGUI");
        ((CardLayout) cardsOrdre.getLayout()).addLayoutComponent(tfg, "TilfoejelseGUI");

        skiftOrdrePanel("KundeGUI");
        bedemand.setVisible(false);
        ordre.setVisible(false);
        produkt.setVisible(false);
        kirkegarrd.setVisible(false);
        tilføjelser.setVisible(false);
        bprodukt.setVisible(false);
        btilføjelser.setVisible(false);
    }

    public void skiftOrdrePanel(String jp) {
        ((CardLayout) cardsOrdre.getLayout()).show(cardsOrdre, jp);
        if (jp.equals("BestillingsOrdreGUI")) {
            bog.opdaterPris();
        }
        if (jp.equals("KirkegaardGUI")) {
            kgg.opdaterPris();
        }
    }
    
    public void setKirkegaardsGrenVisibility(boolean newValue){
        bedemand.setVisible(newValue);
        kirkegarrd.setVisible(newValue);
        bprodukt.setVisible(newValue);
        btilføjelser.setVisible(newValue);
    }
    
    public void setOrdreGrenVisibility(boolean newValue){
        ordre.setVisible(newValue);
        produkt.setVisible(newValue);
        tilføjelser.setVisible(newValue);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cardsOrdre = new javax.swing.JPanel();
        ordre = new javax.swing.JButton();
        kundeoplysninger = new javax.swing.JButton();
        bedemand = new javax.swing.JButton();
        produkt = new javax.swing.JButton();
        kirkegarrd = new javax.swing.JButton();
        tilføjelser = new javax.swing.JButton();
        bprodukt = new javax.swing.JButton();
        btilføjelser = new javax.swing.JButton();

        setBackground(new java.awt.Color(100, 100, 100));
        setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        cardsOrdre.setLayout(new java.awt.CardLayout());

        ordre.setText("Ordre");
        ordre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordreActionPerformed(evt);
            }
        });

        kundeoplysninger.setText("Kundeoplysninger");
        kundeoplysninger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kundeoplysningerActionPerformed(evt);
            }
        });

        bedemand.setText("Bedemand");
        bedemand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bedemandActionPerformed(evt);
            }
        });

        produkt.setText("Produkt");
        produkt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                produktActionPerformed(evt);
            }
        });

        kirkegarrd.setText("Kirkegårds Ordre");
        kirkegarrd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kirkegarrdActionPerformed(evt);
            }
        });

        tilføjelser.setText("Tilføjelser");
        tilføjelser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tilføjelserActionPerformed(evt);
            }
        });

        bprodukt.setText("Produkt");
        bprodukt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bproduktActionPerformed(evt);
            }
        });

        btilføjelser.setText("Tilføjelser");
        btilføjelser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btilføjelserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ordre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(kundeoplysninger, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bedemand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(produkt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(kirkegarrd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tilføjelser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bprodukt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btilføjelser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(46, 46, 46)
                .addComponent(cardsOrdre, javax.swing.GroupLayout.DEFAULT_SIZE, 1101, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(kundeoplysninger)
                .addGap(100, 100, 100)
                .addComponent(produkt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tilføjelser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ordre)
                .addGap(100, 100, 100)
                .addComponent(bedemand)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bprodukt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btilføjelser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(kirkegarrd)
                .addContainerGap(61, Short.MAX_VALUE))
            .addComponent(cardsOrdre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ordreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordreActionPerformed
        skiftOrdrePanel("BestillingsOrdreGUI");
        getProdukt().setBackground(new Color(240,240,240));
        getTilføjelser().setBackground(new Color(240,240,240));
        getOrdre().setBackground(new Color(150,150,150));
        getBprodukt().setBackground(new Color(240,240,240));
        getBtilføjelser().setBackground(new Color(240,240,240));
        getKirkegarrd().setBackground(new Color(240,240,240));
        getBedemand().setBackground(new Color(240,240,240));
        getKundeoplysninger().setBackground(new Color(240,240,240));
    }//GEN-LAST:event_ordreActionPerformed

    private void kundeoplysningerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kundeoplysningerActionPerformed
        skiftOrdrePanel("KundeGUI");
        getProdukt().setBackground(new Color(240,240,240));
        getTilføjelser().setBackground(new Color(240,240,240));
        getOrdre().setBackground(new Color(240,240,240));
        getBprodukt().setBackground(new Color(240,240,240));
        getBtilføjelser().setBackground(new Color(240,240,240));
        getKirkegarrd().setBackground(new Color(240,240,240));
        getBedemand().setBackground(new Color(240,240,240));
        getKundeoplysninger().setBackground(new Color(150,150,150));
    }//GEN-LAST:event_kundeoplysningerActionPerformed

    private void bedemandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bedemandActionPerformed
        skiftOrdrePanel("BedemandGUI");
        getProdukt().setBackground(new Color(240,240,240));
        getTilføjelser().setBackground(new Color(240,240,240));
        getOrdre().setBackground(new Color(240,240,240));
        getBprodukt().setBackground(new Color(240,240,240));
        getBtilføjelser().setBackground(new Color(240,240,240));
        getKirkegarrd().setBackground(new Color(240,240,240));
        getKundeoplysninger().setBackground(new Color(240,240,240));
        getBedemand().setBackground(new Color(150,150,150));
    }//GEN-LAST:event_bedemandActionPerformed

    private void produktActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_produktActionPerformed
        skiftOrdrePanel("ProduktGUI");
        getProdukt().setBackground(new Color(150,150,150));
        getTilføjelser().setBackground(new Color(240,240,240));
        getOrdre().setBackground(new Color(240,240,240));
        getBprodukt().setBackground(new Color(240,240,240));
        getBtilføjelser().setBackground(new Color(240,240,240));
        getKirkegarrd().setBackground(new Color(240,240,240));
        getKundeoplysninger().setBackground(new Color(240,240,240));
        getBedemand().setBackground(new Color(240,240,240));
    }//GEN-LAST:event_produktActionPerformed

    private void tilføjelserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tilføjelserActionPerformed
        skiftOrdrePanel("TilfoejelseGUI");
        getProdukt().setBackground(new Color(240,240,240));
        getTilføjelser().setBackground(new Color(150,150,150));
        getOrdre().setBackground(new Color(240,240,240));
        getBprodukt().setBackground(new Color(240,240,240));
        getBtilføjelser().setBackground(new Color(240,240,240));
        getKirkegarrd().setBackground(new Color(240,240,240));
        getKundeoplysninger().setBackground(new Color(240,240,240));
        getBedemand().setBackground(new Color(240,240,240));
    }//GEN-LAST:event_tilføjelserActionPerformed

    private void kirkegarrdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kirkegarrdActionPerformed
        skiftOrdrePanel("KirkegaardGUI");
        getProdukt().setBackground(new Color(240,240,240));
        getTilføjelser().setBackground(new Color(240,240,240));
        getOrdre().setBackground(new Color(240,240,240));
        getBprodukt().setBackground(new Color(240,240,240));
        getBtilføjelser().setBackground(new Color(240,240,240));
        getKirkegarrd().setBackground(new Color(150,150,150));
        getKundeoplysninger().setBackground(new Color(240,240,240));
        getBedemand().setBackground(new Color(240,240,240));
    }//GEN-LAST:event_kirkegarrdActionPerformed

    private void bproduktActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bproduktActionPerformed
        skiftOrdrePanel("ProduktGUI");
        getProdukt().setBackground(new Color(240,240,240));
        getTilføjelser().setBackground(new Color(240,240,240));
        getOrdre().setBackground(new Color(240,240,240));
        getBprodukt().setBackground(new Color(150,150,150));
        getBtilføjelser().setBackground(new Color(240,240,240));
        getKirkegarrd().setBackground(new Color(240,240,240));
        getKundeoplysninger().setBackground(new Color(240,240,240));
        getBedemand().setBackground(new Color(240,240,240));
    }//GEN-LAST:event_bproduktActionPerformed

    private void btilføjelserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btilføjelserActionPerformed
        skiftOrdrePanel("TilfoejelseGUI");
        getProdukt().setBackground(new Color(240,240,240));
        getTilføjelser().setBackground(new Color(240,240,240));
        getOrdre().setBackground(new Color(240,240,240));
        getBprodukt().setBackground(new Color(240,240,240));
        getBtilføjelser().setBackground(new Color(150,150,150));
        getKirkegarrd().setBackground(new Color(240,240,240));
        getKundeoplysninger().setBackground(new Color(240,240,240));
        getBedemand().setBackground(new Color(240,240,240));
    }//GEN-LAST:event_btilføjelserActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bedemand;
    private javax.swing.JButton bprodukt;
    private javax.swing.JButton btilføjelser;
    private javax.swing.JPanel cardsOrdre;
    private javax.swing.JButton kirkegarrd;
    private javax.swing.JButton kundeoplysninger;
    private javax.swing.JButton ordre;
    private javax.swing.JButton produkt;
    private javax.swing.JButton tilføjelser;
    // End of variables declaration//GEN-END:variables

    public KundeGUI getKundeGUI() {
        return kg;
    }

    public BedemandGUI getBedemandGUI() {
        return beg;
    }

    public ProduktGUI getProduktGUI() {
        return pdg;
    }

    public TilfoejelseGUI getTilfoejelseGUI() {
        return tfg;
    }

    public boolean isKirkegaardsOrdre() {
        return kirkegaardsOrdre;
    }

    public void setKirkegaardsOrdre(boolean kirkegaardsOrdre) {
        this.kirkegaardsOrdre = kirkegaardsOrdre;
    }

    public JButton getBedemand() {
        return bedemand;
    }

    public JButton getBprodukt() {
        return bprodukt;
    }

    public JButton getBtilføjelser() {
        return btilføjelser;
    }

    public JButton getKirkegarrd() {
        return kirkegarrd;
    }

    public JButton getOrdre() {
        return ordre;
    }

    public JButton getProdukt() {
        return produkt;
    }

    public JButton getTilføjelser() {
        return tilføjelser;
    }

    public JButton getKundeoplysninger() {
        return kundeoplysninger;
    }
}
